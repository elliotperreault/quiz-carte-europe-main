<%- include('../partials/header.ejs', {page_title: "admin"}) %>


<body class="bg-light d-flex flex-column min-vh-100">
  <nav class="navbar navbar-expand-lg navbar-dark bg-primary shadow mb-4 rounded-bottom">
    <div class="container-fluid">
      <span class="navbar-brand mb-0 h1 fs-2 fw-bold">Console d'administration</span>
    </div>
  </nav>

  <!-- Main content area for the dashboard -->
  <main class="container flex-fill">
    <!-- Grid container for user score cards - Will be populated by JS -->
    <div class="row g-4" id="userGrid">
      <!-- User cards will be added here dynamically -->
    </div>
    <!-- Container for Global Action Buttons -->
    <div class="mt-4 d-flex justify-content-end">
      <button id="clearResultsBtn" class="btn btn-danger shadow">Effacer Tous les Résultats</button>
    </div>
  </main>

  <footer class="text-center mt-auto py-3 bg-white border-top">
    <a href="https://emm.qc.ca" class="text-decoration-none text-secondary">© École Marcelle-Mallet</a>
  </footer>

  <!-- Add the script tag at the end of the body -->
  <script>
    const mainContent = document.querySelector(".admin-dashboard")

    // Wait for the DOM to be fully loaded before running scripts
    document.addEventListener('DOMContentLoaded', async () => {

      function createUserCard(userData) {
        const {
          username = 'N/A',
          score_countries = 0,
          totalCountries = 15,
          score_capitals = 0,
          totalCapitals = 10
        } = userData;

        // Bootstrap card only
        const col = document.createElement('div');
        col.className = 'col-12 col-sm-6 col-md-4 col-lg-3';

        const card = document.createElement('div');
        card.className = 'card shadow h-100 p-2';

        // User name
        const nameHeading = document.createElement('h5');
        nameHeading.className = 'card-title text-primary mb-2';
        nameHeading.textContent = username;
        card.appendChild(nameHeading);

        // Country score
        const score_countriesLine = document.createElement('p');
        score_countriesLine.className = 'card-text mb-1';
        score_countriesLine.innerHTML = `Pays: <span class="fw-bold text-success">${score_countries} / ${totalCountries}</span>`;
        card.appendChild(score_countriesLine);

        // Capital score
        const score_capitalsLine = document.createElement('p');
        score_capitalsLine.className = 'card-text';
        score_capitalsLine.innerHTML = `Capitales: <span class="fw-bold text-success">${score_capitals} / ${totalCapitals}</span>`;
        card.appendChild(score_capitalsLine);

        col.appendChild(card);
        return col;
      }

      // --- Function to Add a User Card to the Grid ---
      function addUserToGrid(userData, containerSelector) {
        const userGrid = document.querySelector(containerSelector);

        if (!userGrid) {
          console.error("User grid container not found!");
          return;
        }
        const cardElement = createUserCard(userData);
        userGrid.appendChild(cardElement);
      }

      // --- Function to Display Multiple Users ---
      // Clears existing grid content and adds all users from an array
      function displayUsers(usersArray) {
        // Remove all group headers and user cards
        const userGrid = document.getElementById('userGrid');
        userGrid.innerHTML = '';

        // Group users by group property
        const groups = {};
        (usersArray || []).forEach(user => {
          if (!groups[user.group]) groups[user.group] = [];
          groups[user.group].push(user);
        });

        Object.entries(groups).forEach(([group, users]) => {
          // Add group header
          const header = document.createElement('h3');
          header.className = 'mb-3 mt-4 text-secondary fw-bold';
          header.textContent = group;
          userGrid.appendChild(header);

          // Add user cards for this group
          users.forEach(userData => {
            userGrid.appendChild(createUserCard(userData));
          });
        });
      }

      fetch("/admin/users" + window.location.search, {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json'
          }
        })
        .then(async (response) => displayUsers(await response.json()))
        .catch(error => window.location.href = "/admin/login");



      // --- Add Event Listeners for Global Buttons (Example) ---
      const clearBtn = document.getElementById('clearResultsBtn');
      if (clearBtn) {
        clearBtn.addEventListener('click', () => {
          if (confirm("Êtes-vous sûr de vouloir effacer TOUS les résultats ? Cette action est irréversible.")) {
            console.log('Action: Effacer Tous les Résultats');
            alert('Action: Effacer tous les résultats (logique serveur requise)');

            fetch("/admin/users" + window.location.search, {
                method: 'delete',
                headers: {
                  'Content-Type': 'application/json'
                }
              })
              .catch(error => console.error('Error:', error));

            displayUsers({})
          }
        });
      }


    }); // End DOMContentLoaded
  </script>

</body>

</html>